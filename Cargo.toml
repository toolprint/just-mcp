[package]
name = "just-mcp"
version = "0.2.0"
edition = "2021"
rust-version = "1.88.0"
authors = ["Brian Cripe <brian@onegrep.dev"]
description = "Model Context Protocol server for justfile integration"
repository = "https://github.com/toolprint/just-mcp"
license = "MIT"
readme = "README.md"

[dependencies]
# Async runtime
tokio = { version = "1.41", features = ["full"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# CLI argument parsing
clap = { version = "4.5", features = ["derive", "env"] }

# Filesystem monitoring
notify = "6.1"

# Pattern matching for justfile parsing
regex = "1.11"

# Error handling
anyhow = "1.0"
thiserror = "2.0"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }

# Utilities
uuid = { version = "1.11", features = ["v4", "serde"] }
sha2 = "0.10"
base64 = "0.22"
shell-escape = "0.1"
dirs = "5.0"
chrono = { version = "0.4", features = ["serde"] }

# Async trait
async-trait = "0.1"

# HTTP and SSE (for optional HTTP transport)
axum = { version = "0.7", optional = true }
tower = { version = "0.5", optional = true }
hyper = { version = "1.0", optional = true }

# Testing utilities
tempfile = "3.14"
pretty_assertions = "1.4"

# Vector search and database
libsql = { version = "0.6", optional = true }
rusqlite = { version = "0.32", features = ["bundled", "blob"], optional = true }
ndarray = { version = "0.16", optional = true }
sqlite-vss = { version = "0.1", optional = true, features = ["download-libs"] }

# HTTP client for embedding providers
reqwest = { version = "0.12", features = ["json", "native-tls-vendored"], optional = true }

# Local embedding model support with Candle
candle-core = { version = "0.8", optional = true }
candle-nn = { version = "0.8", optional = true }
candle-transformers = { version = "0.8", optional = true }
hf-hub = { version = "0.3.2", features = ["tokio"], optional = true }
tokenizers = { version = "0.21", optional = true }

# Directory walking for CLI
walkdir = "2.5"

# Tree-sitter for AST parsing
tree-sitter = { version = "0.24", optional = true }
tree-sitter-just = { version = "0.1", optional = true }
streaming-iterator = { version = "0.1", optional = true }

# ultrafast-mcp integration for framework-based MCP server
ultrafast-mcp = { version = "202506018.1.0", features = ["core"], optional = true }

# OpenSSL with vendored feature for cross-compilation support
[target.'cfg(all())'.dependencies]
openssl = { version = "0.10", features = ["vendored"] }

[dev-dependencies]
mockall = "0.13"
insta = "1.41"
futures = "0.3"
criterion = { version = "0.5", features = ["html_reports"] }

[build-dependencies]
cc = "1.0"

[features]
default = ["stdio", "ast-parser", "ultrafast-framework"]
stdio = []
http = ["axum", "tower", "hyper"]
vector-search = ["libsql", "rusqlite", "ndarray", "sqlite-vss", "reqwest"]
local-embeddings = ["candle-core", "candle-nn", "candle-transformers", "hf-hub", "tokenizers"]
ast-parser = ["tree-sitter", "tree-sitter-just", "streaming-iterator"]
ultrafast-framework = ["ultrafast-mcp"]
dev-tools = ["ast-parser"]  # Development tools (profiling, analysis)
all = ["stdio", "http", "vector-search", "local-embeddings", "ast-parser", "ultrafast-framework"]

[[bin]]
name = "just-mcp"
path = "src/main.rs"

# Development-only binaries (not included in default builds)
[[bin]]
name = "perf-analysis"
path = "src/bin/perf_analysis.rs"
required-features = ["dev-tools"]

[[bin]]
name = "memory_profiler"
path = "src/bin/memory_profiler.rs"
required-features = ["dev-tools"]

[[bench]]
name = "ast_parser_bench"
harness = false

# cargo-binstall configuration for easy installation
[package.metadata.binstall]
# Default package URL template for GitHub releases
pkg-url = "{ repo }/releases/download/v{ version }/just-mcp-v{ version }-{ target }.tar.gz"
# Package format
pkg-fmt = "tgz"

# macOS: Use universal binary for both Intel and Apple Silicon
[package.metadata.binstall.overrides.x86_64-apple-darwin]
pkg-url = "{ repo }/releases/download/v{ version }/just-mcp-v{ version }-universal2-apple-darwin.tar.gz"

[package.metadata.binstall.overrides.aarch64-apple-darwin]
pkg-url = "{ repo }/releases/download/v{ version }/just-mcp-v{ version }-universal2-apple-darwin.tar.gz"

# Windows support (future - when we add Windows builds)
[package.metadata.binstall.overrides.x86_64-pc-windows-msvc]
pkg-url = "{ repo }/releases/download/v{ version }/just-mcp-v{ version }-x86_64-pc-windows-msvc.zip"
pkg-fmt = "zip"

[package.metadata.binstall.overrides.aarch64-pc-windows-msvc]
pkg-url = "{ repo }/releases/download/v{ version }/just-mcp-v{ version }-aarch64-pc-windows-msvc.zip"
pkg-fmt = "zip"
